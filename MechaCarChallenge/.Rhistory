setwd("C:/Users/Sara/Desktop/R_Analysis/01_Demo")
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
install.packages("tidyverse")
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
install.packages("dplyr")
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
?aov()
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
?cor()
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt <- ggplot2(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
?lm()
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
setwd("C:/Users/Sara/Desktop/R_Analysis/MechaCarChallenge")
library(tidyverse)
Mecha_Car_Mpg <- read.csv('MechaCar_mpg.csv') #import used car dataset
View(Mecha_Car_Mpg)
lm(mpg ~ vehicle.weight,Mecha_Car_Mpg)
summary(lm(mpg~vehicle.weight,Mecha_Car_Mpg))
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD,data=Mecha_Car_Mpg)
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD,data=Mecha_Car_Mpg)
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD,data=Mecha_Car_Mpg))
Suspension_Data <- read.csv('Suspension_Coil')
Suspension_Data <- read.csv('Suspension_Coil.csv')
Suspension_Data <- read.csv('Suspension_Col.csv')
Suspension_Data <- read.csv('Suspension_Coil.csv')
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD,data=Mecha_Car_Mpg)
summarize_coil <- Suspension_Data %>% + summarize(Mean_PSI=mean(PSI))
View(Suspension_Data)
summarize_coil <- Suspension_Data %>% + summarize(Mean_PSI=mean(psi))
summarize_coil <- Suspension_Data %>% summarize(Mean_PSI=mean(PSI))
View(summarize_coil)
summarize_coil <- Suspension_Data %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Std_PSI=sd(PSI))
summarize_coil <- Suspension_Data %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Std_PSI=sd(PSI),Var_PSI=var(PSI))
attach(Suspension_Data)
names(Suspension_Data)
class(PSI)
t.test(PSI, mu=1500, alternative = "less", conf.level = 0.95)
t.test(log10(sample_table$PSI),mu=mean(log10(population_table$PSI)))
population_table<- read.csv('Suspension_Coil.csv')
sample_table <- population_table %>% sample_n(35)
t.test(log10(sample_table$PSI),mu=mean(log10(population_table$PSI))) #compare sample versus population means
t.test((sample_table$PSI),mu=mean((population_table$PSI))) #compare sample versus population means
t.test((sample_table$PSI),mu=mean((population_table$PSI))) #compare sample versus population means
